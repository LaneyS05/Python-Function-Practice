Built in python functions

abs() - Returns the absolute value of a number.
all() - Returns True if all elements of the iterable are true (or if the iterable is empty).
any() - Returns True if any element of the iterable is true. If the iterable is empty, returns False.
ascii() - Returns a readable version of an object. Replaces non-ASCII characters with escape characters.
bin() - Converts an integer to a binary string.
bool() - Converts a value to a Boolean, using the standard truth testing procedure.
bytearray() - Returns a bytearray object.
bytes() - Returns a bytes object.
callable() - Returns True if the object appears callable.
chr() - Returns a string representing a character whose Unicode code point is the integer i.
classmethod() - Returns a class method for the function.
compile() - Compiles source into a code or AST object. Can be executed by exec() or eval().
complex() - Creates a complex number.
delattr() - Deletes an attribute from the object.
dict() - Creates a new dictionary.
dir() - Attempts to return a list of valid attributes of the object.
divmod() - Takes two numbers and returns a pair of numbers (a tuple) consisting of their quotient and remainder.
enumerate() - Returns an enumerate object.
eval() - Parses the expression passed to this function and runs Python expression (code) within the program.
exec() - Executes the specified code (or object).
filter() - Constructs an iterator from elements of iterable for which function returns true.
float() - Returns a floating point number.
format() - Returns a formatted representation of a value.
frozenset() - Returns a new frozenset object, optionally with elements taken from iterable.
getattr() - Returns the value of the named attribute of an object.
globals() - Returns a dictionary representing the current global symbol table.
hasattr() - Returns True if the object has the specified attribute.
hash() - Returns the hash value of the object (if it has one).
help() - Invokes the built-in help system.
hex() - Converts an integer to a hexadecimal string.
id() - Returns the identity of an object.
input() - Reads a line from input, converts it to a string (stripping a trailing newline).
int() - Returns an integer object from a number or string.
isinstance() - Returns True if the specified object is of the specified type.
issubclass() - Returns True if the specified class is a subclass of the specified parent class.
iter() - Returns an iterator object.
len() - Returns the length (the number of items) of an object.
list() - Creates a new list.
locals() - Updates and returns a dictionary representing the current local symbol table.
map() - Applies a function to all the items in an input list.
max() - Returns the largest item in an iterable or the largest of two or more arguments.
memoryview() - Returns a memory view object.
min() - Returns the smallest item in an iterable or the smallest of two or more arguments.
next() - Retrieves the next item from the iterator by calling its __next__() method.
object() - Returns a new featureless object.
oct() - Converts an integer to an octal string.
open() - Opens a file and returns a corresponding file object.
ord() - Given a string of one character, returns an integer representing the Unicode code point of the character.
pow() - Returns base to the power of exp.
print() - Prints to the standard output device.
property() - Returns a property attribute.
range() - Returns a sequence of numbers, starting from 0 and increments by 1 (by default).
repr() - Returns a string containing a printable representation of an object.
reversed() - Returns a reversed iterator.
round() - Rounds a floating-point number to a specified number of decimal places.
set() - Returns a new set object, optionally with elements taken from iterable.
setattr() - Sets an attribute of an object.
slice() - Returns a slice object representing the set of indices specified by range(start, stop, step).
sorted() - Returns a new sorted list from the items in iterable.
staticmethod() - Returns a static method for the function.
str() - Returns a string version of object.
sum() - Sums start and the items of an iterable from left to right and returns the total.
super() - Returns a proxy object that delegates method calls to a parent or sibling class of type.
tuple() - Returns a tuple.
type() - Returns the type of an object.
vars() - Returns the __dict__ attribute of the given object.
zip() - Returns an iterator of tuples, where the i-th tuple contains the i-th element from each of the argument sequences.
import() - This function is invoked by the import statement.

1:41